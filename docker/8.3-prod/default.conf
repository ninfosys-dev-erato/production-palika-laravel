server {
    listen 80;
    server_name _;
    root /var/www/html/public;
    index index.php index.html index.htm;

    # Security: Hide nginx version
    server_tokens off;

    # Security: Prevent access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Security: Prevent access to sensitive files
    location ~* \.(env|log|sql|conf|bak|swp|tmp)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Allow access to Livewire and specific vendor public assets
    location ~* ^/vendor/(livewire|livewire-alert)/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        # Set proper MIME types for JS and CSS
        location ~* \.(js)$ {
            add_header Content-Type "application/javascript";
        }
        location ~* \.(css)$ {
            add_header Content-Type "text/css";
        }
        try_files $uri =404;
    }
    
    # Allow access to specific vendor JS/CSS files in public directory (including versioned files)
    location ~* ^/vendor/.*\.(js|css|map)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        # Set proper MIME types
        location ~* \.(js)$ {
            add_header Content-Type "application/javascript";
        }
        location ~* \.(css)$ {
            add_header Content-Type "text/css";
        }
        try_files $uri =404;
    }
    
    # Handle versioned vendor files (like nepali.datepicker.v4.0.8.min.js)
    location ~* ^/vendor/.*\.v\d+\.\d+\.\d+\.min\.(js|css)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        # Set proper MIME types for versioned files
        location ~* \.js$ {
            add_header Content-Type "application/javascript";
        }
        location ~* \.css$ {
            add_header Content-Type "text/css";
        }
        try_files $uri =404;
    }
    
    # Security: Prevent access to vendor PHP files and other sensitive files
    location ~* ^/vendor/.*\.(php|json|lock|md|txt|xml|yml|yaml|ini|env)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Security: Prevent access to storage directory except public
    location ~* /storage/(?!app/public/) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Security: Prevent access to bootstrap/cache
    location ~* /bootstrap/cache/ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Rate limiting
    limit_req zone=general burst=20 nodelay;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Static file caching with proper MIME types
    location ~* \.(css)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        add_header Content-Type "text/css";
        try_files $uri =404;
        # Log missing CSS files for debugging
        access_log /tmp/nginx-access.log;
    }
    
    location ~* \.(js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        add_header Content-Type "application/javascript";
        try_files $uri =404;
        # Log missing JS files for debugging
        access_log /tmp/nginx-access.log;
    }
    
    location ~* \.(jpg|jpeg|png|gif|ico|pdf|txt|woff|woff2|ttf|eot|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        try_files $uri =404;
    }

    # Handle public assets directory
    location /assets/ {
        alias /var/www/html/public/assets/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }
    
    # Handle Laravel Livewire Tables assets (rappasoft) - CSS files (specific patterns first)
    location ~* ^/rappasoft/laravel-livewire-tables/.*\.css$ {
        root /var/www/html/public;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        add_header Content-Type "text/css";
        try_files $uri =404;
        access_log /tmp/nginx-access.log;
    }
    
    # Handle Laravel Livewire Tables assets (rappasoft) - JS files (specific patterns first)
    location ~* ^/rappasoft/laravel-livewire-tables/.*\.js$ {
        root /var/www/html/public;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        add_header Content-Type "application/javascript";
        try_files $uri =404;
        access_log /tmp/nginx-access.log;
    }
    
    # Handle vendor/rappasoft CSS files for compatibility
    location ~* ^/vendor/rappasoft/laravel-livewire-tables/.*\.css$ {
        root /var/www/html/public;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        add_header Content-Type "text/css";
        try_files $uri =404;
    }
    
    # Handle vendor/rappasoft JS files for compatibility
    location ~* ^/vendor/rappasoft/laravel-livewire-tables/.*\.js$ {
        root /var/www/html/public;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        add_header Content-Type "application/javascript";
        try_files $uri =404;
    }
    
    # Handle Laravel Livewire Tables assets (rappasoft) - general directory for other files
    location /rappasoft/ {
        alias /var/www/html/public/rappasoft/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        try_files $uri =404;
    }
    
    # Also handle the alternative vendor/rappasoft path for compatibility - general
    location /vendor/rappasoft/ {
        alias /var/www/html/public/vendor/rappasoft/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        try_files $uri =404;
    }

    # Main location block for Laravel
    location / {
        try_files $uri $uri/ /index.php?$query_string;

        # Security headers for dynamic content
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        # Override CSP for HTML responses to be more permissive
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com https://unpkg.com https://cdn.tailwindcss.com https://buttons.github.io; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com https://fonts.googleapis.com https://unpkg.com https://cdn.tailwindcss.com; img-src 'self' data: https: blob:; font-src 'self' data: https://fonts.gstatic.com https://cdn.jsdelivr.net; connect-src 'self' ws: wss:; frame-ancestors 'self';" always;
    }

    # PHP-FPM configuration
    location ~ \.php$ {
        # Security: Prevent access to PHP files outside public
        location ~ /\. {
            deny all;
        }

        # Rate limiting for PHP requests
        limit_req zone=general burst=10 nodelay;

        # FastCGI configuration
        fastcgi_pass php-fpm;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;

        # FastCGI optimizations
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_connect_timeout 300;

        # Security: Hide PHP version
        fastcgi_hide_header X-Powered-By;
    }

    # Deny access to .htaccess files
    location ~ /\.ht {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to composer files
    location ~* composer\.(json|lock)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to package files
    location ~* package\.(json|lock)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Error pages
    error_page 404 /index.php;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
