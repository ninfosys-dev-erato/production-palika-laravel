#!/bin/bash

# Hardened Laravel Production Container Startup Script
# This script starts nginx, php-fpm, and other services with security hardening

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Main startup function
main() {
    print_status "Starting hardened Laravel application container..."
    
    # Create essential directories with proper permissions
    print_status "Setting up directories..."
    mkdir -p /run/php /var/run 2>/dev/null || true
    mkdir -p /var/run/php 2>/dev/null || true
    mkdir -p /var/lib/nginx/body /var/lib/nginx/fastcgi /var/lib/nginx/proxy 2>/dev/null || true
    mkdir -p /var/lib/nginx/scgi /var/lib/nginx/uwsgi 2>/dev/null || true
    mkdir -p /etc/nginx/sites-enabled 2>/dev/null || true
    
    # Set proper permissions for nginx directories
    print_status "Setting up permissions..."
    chown -R www-data:www-data /var/lib/nginx /run/php /var/run/php 2>/dev/null || true
    chmod -R 755 /var/lib/nginx /run/php /var/run/php 2>/dev/null || true
    
    # Create nginx sites symlink
    print_status "Setting up nginx configuration..."
    ln -sf /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default 2>/dev/null || true
    
    # Create temporary OPcache blacklist in /tmp (always works)
    print_status "Creating OPcache blacklist in /tmp..."
    cat > /tmp/opcache-blacklist.txt << 'EOF'
# OPcache blacklist for files that should not be cached
/var/www/html/storage/
/var/www/html/bootstrap/cache/
/var/www/html/.env
EOF
    
    # Test configurations
    print_status "Testing configurations..."
    if nginx -t 2>/dev/null; then
        print_status "Nginx configuration OK"
    else
        print_error "Nginx configuration test failed:"
        nginx -t 2>&1 || true
    fi
    
    if php-fpm8.3 -t 2>/dev/null; then
        print_status "PHP-FPM configuration OK"
    else
        print_error "PHP-FPM configuration test failed:"
        php-fpm8.3 -t 2>&1 || true
    fi
    
    # Database connectivity check
    print_status "Checking database connectivity..."
    if [ -n "$DB_HOST" ] && [ -n "$DB_PORT" ]; then
        timeout=10
        while [ $timeout -gt 0 ]; do
            if mysqladmin ping -h "$DB_HOST" -P "$DB_PORT" --silent 2>/dev/null; then
                print_status "Database connection successful"
                break
            fi
            timeout=$((timeout - 1))
            [ $timeout -eq 0 ] && print_warning "Database not reachable, continuing anyway..."
            sleep 1
        done
    else
        print_warning "Database variables not set, skipping connectivity check"
    fi
    
    # Ensure Laravel storage directories exist and have proper permissions
    print_status "Setting up Laravel storage directories..."
    mkdir -p /var/www/html/storage/logs 2>/dev/null || true
    mkdir -p /var/www/html/storage/app/public 2>/dev/null || true
    mkdir -p /var/www/html/storage/framework/cache 2>/dev/null || true
    mkdir -p /var/www/html/storage/framework/sessions 2>/dev/null || true
    mkdir -p /var/www/html/storage/framework/views 2>/dev/null || true
    mkdir -p /var/www/html/bootstrap/cache 2>/dev/null || true
    chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache 2>/dev/null || true
    chmod -R 755 /var/www/html/storage /var/www/html/bootstrap/cache 2>/dev/null || true
    
    # Start services
    print_status "Starting services..."
    print_status "Laravel application container is ready!"
    
    # Start supervisor to manage nginx and php-fpm
    exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf
}

# Execute main function
main "$@"
